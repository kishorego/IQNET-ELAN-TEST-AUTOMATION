############# Spirent HLTAPI Export Log File #############
#puts "source hltapi_5.10_stc_2.10.tcl"
#source  hltapi_5.10_stc_2.10.tcl
puts "package require SpirentHltApi"
package require SpirentHltApi

puts "\nsth::test_control -action enable"
set ret [sth::test_control -action enable]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::connect -device 10.91.113.124 -port_list {11/6 11/10} -break_locks 1 -offline 0"
set ret [sth::connect -device 10.91.113.124 -port_list {11/6 11/10} -break_locks 1 -offline 0]
set logged_ret "{offline 0} {port_handle {{10 {{91 {{113 {{124 {{11/6 port5} {11/10 port6}}}}}}}}}}} {status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::interface_config -mode config -port_handle port5 -create_host false -intf_mode ethernet -phy_mode fiber -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -flow_control false -speed ether1000 -data_path_mode normal -autonegotiation 1"
set ret [sth::interface_config -mode config -port_handle port5 -create_host false -intf_mode ethernet -phy_mode fiber -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -flow_control false -speed ether1000 -data_path_mode normal -autonegotiation 1]
set logged_ret "{arpnd_status 1} {arpnd_cache none} {arpnd_report none} {status 1} {handles 0}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::interface_config -mode config -port_handle port6 -create_host false -intf_mode ethernet -phy_mode fiber -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -flow_control false -speed ether1000 -data_path_mode normal -autonegotiation 1"
set ret [sth::interface_config -mode config -port_handle port6 -create_host false -intf_mode ethernet -phy_mode fiber -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -flow_control false -speed ether1000 -data_path_mode normal -autonegotiation 1]
set logged_ret "{arpnd_status 1} {arpnd_cache none} {arpnd_report none} {status 1} {handles 0}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_config -mode create -port_handle port5 -l2_encap ethernet_ii -l3_protocol ipv4 -ip_id 0 -ip_src_addr 192.85.1.2 -ip_dst_addr 192.0.0.1 -ip_ttl 255 -ip_hdr_length 5 -ip_protocol 253 -ip_fragment_offset 0 -ip_mbz 0 -ip_precedence 0 -ip_tos_field 0 -mac_dst_mode increment -mac_dst_repeat_count 0 -mac_dst_count 50 -mac_src_count 50 -mac_src_mode increment -mac_src_repeat_count 0 -mac_src 00:10:94:00:00:02 -mac_dst 00:00:01:00:00:01 -enable_control_plane 0 -l3_length 4982 -name StreamBlock_11 -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 5000 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port6 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 6000 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 800 -mac_discovery_gw 192.85.1.1 -enable_stream false"
set ret [sth::traffic_config -mode create -port_handle port5 -l2_encap ethernet_ii -l3_protocol ipv4 -ip_id 0 -ip_src_addr 192.85.1.2 -ip_dst_addr 192.0.0.1 -ip_ttl 255 -ip_hdr_length 5 -ip_protocol 253 -ip_fragment_offset 0 -ip_mbz 0 -ip_precedence 0 -ip_tos_field 0 -mac_dst_mode increment -mac_dst_repeat_count 0 -mac_dst_count 50 -mac_src_count 50 -mac_src_mode increment -mac_src_repeat_count 0 -mac_src 00:10:94:00:00:02 -mac_dst 00:00:01:00:00:01 -enable_control_plane 0 -l3_length 4982 -name StreamBlock_11 -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 5000 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port6 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 6000 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 800 -mac_discovery_gw 192.85.1.1 -enable_stream false]
set logged_ret "00:10:94:00:00:02"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\n::sth::mac_convert 00:00:01:00:00:01"
set ret [::sth::mac_convert 00:00:01:00:00:01]
set logged_ret "00:00:01:00:00:01"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_config -mode create -port_handle port6 -l2_encap ethernet_ii -l3_protocol ipv4 -ip_id 0 -ip_src_addr 192.85.1.2 -ip_dst_addr 192.0.0.1 -ip_ttl 255 -ip_hdr_length 5 -ip_protocol 253 -ip_fragment_offset 0 -ip_mbz 0 -ip_precedence 0 -ip_tos_field 0 -mac_dst_mode increment -mac_dst_repeat_count 0 -mac_dst_count 50 -mac_src_count 50 -mac_src_mode increment -mac_src_repeat_count 0 -mac_src 00:00:01:00:00:01 -mac_dst 00:10:94:00:00:02 -enable_control_plane 0 -l3_length 4982 -name StreamBlock_12 -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 5000 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port5 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 6000 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 800 -mac_discovery_gw 192.85.1.1 -enable_stream false"
set ret [sth::traffic_config -mode create -port_handle port6 -l2_encap ethernet_ii -l3_protocol ipv4 -ip_id 0 -ip_src_addr 192.85.1.2 -ip_dst_addr 192.0.0.1 -ip_ttl 255 -ip_hdr_length 5 -ip_protocol 253 -ip_fragment_offset 0 -ip_mbz 0 -ip_precedence 0 -ip_tos_field 0 -mac_dst_mode increment -mac_dst_repeat_count 0 -mac_dst_count 50 -mac_src_count 50 -mac_src_mode increment -mac_src_repeat_count 0 -mac_src 00:00:01:00:00:01 -mac_dst 00:10:94:00:00:02 -enable_control_plane 0 -l3_length 4982 -name StreamBlock_12 -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 5000 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port5 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 6000 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 800 -mac_discovery_gw 192.85.1.1 -enable_stream false]
set logged_ret "00:00:01:00:00:01"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\n::sth::mac_convert 00:10:94:00:00:02"
set ret [::sth::mac_convert 00:10:94:00:00:02]
set logged_ret "00:10:94:00:00:02"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_control -port_handle {port5 port6} -action run -duration 30"
set ret [sth::traffic_control -port_handle {port5 port6} -action run -duration 30]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_control -port_handle {port5 port6} -action clear_stats"
set ret [sth::traffic_control -port_handle {port5 port6} -action clear_stats]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_control -port_handle {port5 port6} -action run -duration 30"
set ret [sth::traffic_control -port_handle {port5 port6} -action run -duration 30]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_stats -port_handle {port5 port6} -mode all"
set ret [sth::traffic_stats -port_handle {port5 port6} -mode all]
set logged_ret "after#5"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nafter 3000"
set ret [after 3000]
set logged_ret "after#6"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::cleanup_session -port_handle {port5 port6} -clean_dbfile 1"
set ret [sth::cleanup_session -port_handle {port5 port6} -clean_dbfile 1]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret
